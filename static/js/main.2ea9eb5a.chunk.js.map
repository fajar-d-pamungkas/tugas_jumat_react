{"version":3,"sources":["Artikel/Judul.js","Artikel/satu.js","Artikel/dua.js","Artikel/AkhirKata.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","Judul","Intro","state","penjelasan","next","bind","e","preventDefault","this","setState","latar","onClick","Component","Kucing","gambar","foto","width","src","alt","React","AkhirKata","nama","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wNAQeA,MANf,SAAgBC,GACd,OACE,2BAAG,gCAAQ,4BAAKA,EAAMC,U,mCCwBXC,E,kDAzBb,WAAYF,GAAO,IAAD,8BACd,cAAMA,IACDG,MAAM,CACTC,WAAW,uPAEb,EAAKC,KAAK,EAAKA,KAAKC,KAAV,gBALI,E,iDAObC,GACDA,EAAEC,iBACFC,KAAKC,SAAS,CAACN,WAAW,oI,+BAGrB,IAAD,OACJ,OACI,6BACA,gCACE,2BAAG,2BAAIK,KAAKT,MAAMW,QAClB,2BAAIF,KAAKN,MAAMC,YACf,4BAAQQ,QAAS,SAACL,GAAD,OAAK,EAAKF,KAAME,KAAjC,mB,GAnBQM,aC4BLC,E,kDA3Bb,WAAYd,GAAO,IAAD,8BACd,cAAMA,IACDG,MAAM,CACTY,OAAO,2EACPX,WAAW,kBAEb,EAAKC,KAAK,EAAKA,KAAKC,KAAV,gBANI,E,iDAQbC,GACDA,EAAEC,iBACFC,KAAKC,SAAS,CAACK,OAAO,6EACtBN,KAAKC,SAAS,CAACN,WAAW,qB,+BAErB,IAAD,OACJ,OACI,6BACE,gCACE,2BAAG,2BAAIK,KAAKT,MAAMgB,OAClB,yBAAKC,MAAM,MAAMC,IAAKT,KAAKN,MAAMY,OAAQI,IAAI,iBAC7C,2BAAIV,KAAKN,MAAMC,YACf,4BAAQQ,QAAS,SAACL,GAAD,OAAK,EAAKF,KAAME,KAAjC,mB,GArBOa,IAAMP,WCUZQ,MAVf,SAAmBrB,GACjB,OACE,2BACCA,EAAMsB,OCaIC,MAXf,WACE,OACE,6BACE,kBAAC,EAAD,CAAQtB,MAAM,mBACd,kBAAC,EAAD,CAAOU,MAAM,cACb,kBAAC,EAAD,CAAQK,KAAK,SACb,kBAAC,EAAD,CAAWM,KAAK,yBCDFE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.2ea9eb5a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header(props){\r\n  return(\r\n    <b><center><h1>{props.Judul}</h1></center></b>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nclass Intro extends Component {\r\n  constructor(props){\r\n      super(props)\r\n      this.state={\r\n        penjelasan:\"hewan peliharaan yang banyak sekali diminati oleh orang – orang yang memang dari penampilan fisik yang ukuranya kecil, berbulu, manja dan imut. Kucing menjadi hewan yang tepat untuk dipelihara supaya menemani sehari – hari seseorang.\"\r\n      }\r\n      this.next=this.next.bind(this)\r\n  }\r\n  next(e){\r\n      e.preventDefault()\r\n      this.setState({penjelasan:\"Kucing Persia, Kucing Anggora, Kucing Siam, Kucing Maine Coon, Kucing Kampung, Kucing Persia Himalaya dan masih banyak lagi..\"})\r\n  }\r\n\r\n  render(){\r\n      return(\r\n          <div>\r\n          <center>\r\n            <b><p>{this.props.latar}</p></b>\r\n            <p>{this.state.penjelasan}</p>\r\n            <button onClick={(e)=>this.next (e)}>Jenis nya</button>\r\n          </center>\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Intro;\r\n","import React from 'react';\r\n\r\nclass Kucing extends React.Component {\r\n  constructor(props){\r\n      super(props)\r\n      this.state={\r\n        gambar:\"https://cdns.klimg.com/diadona.id/resources//real/2020/02/14/18738/-.jpg\",\r\n        penjelasan:\"Kucing Anggora\"\r\n      }\r\n      this.next=this.next.bind(this)\r\n  }\r\n  next(e){\r\n      e.preventDefault()\r\n      this.setState({gambar:\"https://cdns.klimg.com/diadona.id/resources//real/2020/02/14/18749/-.jpg\"})\r\n      this.setState({penjelasan:\"Kucing Kampung\"})\r\n  }\r\n  render(){\r\n      return(\r\n          <div>\r\n            <center>\r\n              <b><p>{this.props.foto}</p></b>\r\n              <img width=\"650\" src={this.state.gambar} alt=\"Games Online\"/>\r\n              <p>{this.state.penjelasan}</p>\r\n              <button onClick={(e)=>this.next (e)}>Satu Lagi</button>\r\n            </center>\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Kucing;\r\n","import React from 'react';\r\n\r\nfunction AkhirKata(props){\r\n  return(\r\n    <b>\r\n    {props.nama}\r\n    </b>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default AkhirKata;\r\n","import React from 'react';\nimport './App.css';\nimport Header from './Artikel/Judul';\nimport Intro from './Artikel/satu';\nimport Kucing from './Artikel/dua';\nimport AkhirKata from './Artikel/AkhirKata';\n\nfunction App() {\n  return (\n    <div>\n      <Header Judul=\"--= KUCING =--\"/>\n      <Intro latar=\"Pembukaan\"/>\n      <Kucing foto=\"Foto\"/>\n      <AkhirKata nama=\"Fajar D. Pamungkas\"/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}